/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
    };

    macros {
        cubes: cubes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(C) &kp U &kp B &kp E &kp S &kp N6 &kp N3 &kp N2 &kp LS(C) &kp A &kp K &kp E &kp S &kp EXCL>;
            label = "CUBES";
        };
        hotkey_mac_a: hotkey_mac_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(A))>;
            label = "HOTKEY_MAC_A";
        };
        hotkey_mac_c: hotkey_mac_c {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(C))>;
            label = "HOTKEY_MAC_C";
        };
        hotkey_mac_s: hotkey_mac_s {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(S))>;
            label = "HOTKEY_MAC_S";
        };
        hotkey_mac_f: hotkey_mac_f {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(F))>;
            label = "HOTKEY_MAC_F";
        };
        hotkey_mac_w: hotkey_mac_w {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(W))>;
            label = "HOTKEY_MAC_W";
        };
        hotkey_mac_q: hotkey_mac_q {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(Q))>;
            label = "HOTKEY_MAC_Q";
        };
        hotkey_mac_r: hotkey_mac_r {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(R))>;
            label = "HOTKEY_MAC_R";
        };
        hotkey_mac_v: hotkey_mac_v {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(V))>;
            label = "HOTKEY_MAC_V";
        };
        hotkey_mac_t: hotkey_mac_t {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(T))>;
            label = "HOTKEY_MAC_T";
        };
        hotkey_mac_d: hotkey_mac_d {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(D))>;
            label = "HOTKEY_MAC_D";
        };
        hotkey_win_a: hotkey_win_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(A))>;
            label = "HOTKEY_WIN_A";
        };
        hotkey_mac_z: hotkey_mac_z {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(Z))>;
            label = "HOTKEY_MAC_Z";
        };
        hotkey_mac_x: hotkey_mac_x {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(X))>;
            label = "HOTKEY_MAC_X";
        };
        hotkey_win_f: hotkey_win_f {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(F))>;
            label = "HOTKEY_WIN_F";
        };
        hotkey_win_r: hotkey_win_r {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(R))>;
            label = "HOTKEY_WIN_R";
        };
        hotkey_win_s: hotkey_win_s {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(S))>;
            label = "HOTKEY_WIN_S";
        };
        hotkey_win_t: hotkey_win_t {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(T))>;
            label = "HOTKEY_WIN_T";
        };
        hotkey_win_d: hotkey_win_d {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(D))>;
            label = "HOTKEY_WIN_D";
        };
        hotkey_win_z: hotkey_win_z {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(Z))>;
            label = "HOTKEY_WIN_Z";
        };
        hotkey_win_x: hotkey_win_x {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(X))>;
            label = "HOTKEY_WIN_X";
        };
        hotkey_win_c: hotkey_win_c {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(C))>;
            label = "HOTKEY_WIN_C";
        };
        hotkey_win_v: hotkey_win_v {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(V))>;
            label = "HOTKEY_WIN_V";
        };
        hotkey_win_b: hotkey_win_b {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(B))>;
            label = "HOTKEY_WIN_B";
        };
        hotkey_win_w: hotkey_win_w {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(W))>;
            label = "HOTKEY_WIN_W";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1     &kp N2     &kp N3    &kp N4     &kp N5  &tog 6                                                    &mo 2          &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q      &kp W      &kp E     &kp R      &kp T   &to 0                                                     &to 3          &kp Y   &kp U   &kp I      &kp O     &kp P     &kp BSLH
&kp ESC    &kp A      &kp S      &kp D     &kp F      &kp G   &to 1      &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &to 4          &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z      &kp X      &kp C     &kp V      &kp B                         &kp HOME      &kp PG_UP                            &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&mo 8      &kp ENTER  &kp GRAVE  &kp LEFT  &kp RIGHT          &kp SPACE  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp BACKSPACE          &kp UP  &kp DOWN   &kp LBKT  &kp RBKT  &mo 8
            >;
        };

        layer_colemak {
            bindings = <
&kp EQUAL  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &trans                                      &mo 2   &kp N6  &kp N7  &kp N8     &kp N9      &kp N0         &kp MINUS
&kp TAB    &kp Q   &kp W   &kp F   &kp P   &kp G   &trans                                      &trans  &kp J   &kp L   &kp U      &kp Y       &kp SEMICOLON  &kp BSLH
&kp ESC    &kp A   &kp R   &kp S   &kp T   &kp D   &trans  &trans  &trans      &trans  &trans  &trans  &kp H   &kp N   &kp E      &kp I       &kp O          &trans
&kp LSHFT  &kp Z   &kp X   &kp C   &kp V   &kp B                   &trans      &trans                  &kp K   &kp M   &kp COMMA  &kp PERIOD  &kp SLASH      &kp RSHFT
&mo 2      &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans     &trans      &trans         &trans
            >;
        };

        layer_mod_win {
            bindings = <
&none  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &none                                                   &trans                  &none  &none       &none       &none  &none  &none
&none  &none          &hotkey_win_w  &hotkey_win_f  &none          &none          &bootloader                                             &bootloader             &none  &none       &none       &none  &none  &none
&none  &hotkey_win_a  &hotkey_win_r  &hotkey_win_s  &hotkey_win_t  &hotkey_win_d  &none        &tog 0  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &hotkey_win_z  &hotkey_win_x  &hotkey_win_c  &hotkey_win_v  &hotkey_win_b                       &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none          &none          &none          &none                         &none        &tog 0  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        layer_Qwerty_Mac {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LGUI  &kp LEFT_CONTROL      &kp RIGHT_CONTROL  &kp RIGHT_ALT  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans                &trans                                    &trans  &trans  &trans  &trans  &trans  &trans
&mo 6   &trans  &trans  &trans  &trans          &trans  &trans    &trans                &trans             &trans         &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_Colemak_Mac {
            bindings = <
&kp EQUAL  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &trans                                                                    &mo 2   &kp N6  &kp N7  &kp N8     &kp N9   &kp N0         &kp MINUS
&kp TAB    &kp Q   &kp W   &kp F   &kp P   &kp G   &to 0                                                                     &to 3   &kp J   &kp L   &kp U      &kp Y    &kp SEMICOLON  &kp BSLH
&kp ESC    &kp A   &kp R   &kp S   &kp T   &kp D   &to 1   &kp LGUI  &kp LEFT_CONTROL      &kp RIGHT_CONTROL  &kp RIGHT_ALT  &to 4   &kp H   &kp N   &kp E      &kp I    &kp O          &kp APOS
&kp LSHFT  &kp Z   &kp X   &kp C   &kp V   &kp B                     &trans                &trans                                    &kp K   &kp M   &kp COMMA  &kp DOT  &kp FSLH       &kp RSHFT
&mo 5      &trans  &trans  &trans  &trans          &trans  &trans    &trans                &trans             &trans         &trans          &trans  &trans     &trans   &trans         &trans
            >;
        };

        layer_mod_mac {
            bindings = <
&trans  &trans         &trans         &trans         &trans         &trans         &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &hotkey_mac_q  &hotkey_mac_w  &hotkey_mac_f  &trans         &trans         &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &hotkey_mac_a  &trans         &hotkey_mac_s  &hotkey_mac_t  &hotkey_mac_d  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &hotkey_mac_z  &hotkey_mac_x  &hotkey_mac_c  &hotkey_mac_v  &trans                         &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans         &trans         &trans         &trans                        &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &trans     &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&trans     &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &trans
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 0                                      &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &cubes  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        Fn {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans                                              &trans           &trans  &trans      &trans      &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans        &trans                                              &trans           &trans  &trans      &trans      &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans      &bt BT_CLR  &trans      &rgb_ug RGB_SPI  &trans  &trans      &trans      &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans                        &trans      &trans                                   &trans  &trans      &trans      &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans                      &trans  &trans  &trans      &trans      &bl BL_TOG  &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC  &trans  &trans  &trans
            >;
        };
    };
};
